# Architecture Reference Points


## Architecture Goals
* What is the expected lifespan of the system?
* Will the system need to respond to technological changes over that time, such as new versions of middleware or other products?
* How frequently is the system expected to adapt to change?
* What changes can we anticipate in the future, and how can we make them easier to accommodate?

## Architecture Constraints
* Network topology
* Use of a given database vendor or an existing database
* Web environment (server configurations, firewall, DMZs, and so forth)
* Servers (hardware model, operating system)
* Use of third-party software or a particular technology
* Compliance with existing standards

## Architecturally significant requirements
Architecturally significant requirements are a subset of the requirements that need to be satisfied before the architecture can be considered "stable". Typically, these are requirements that are technically challenging, technically constraining, or central to the system's purpose. Furthermore, the system will generally be more sensitive to changes against architecturally significant requirements, so identifying and communicating this subset will help others understand the potential implications of change.

### Selection of ASRs
The selection of requirements that are considered "architecturally significant" is driven by several key driving factors:

* The benefit of the requirement to stakeholders: critical, important, or useful.
* The architectural impact of the requirement: none, extends, or modifies. There may be critical requirements that have little or no impact on the architecture and low-benefit requirements that have a big impact. Low-benefit requirements with big architectural impacts should be reviewed by the project manager for possible removal from the scope of the project.
* The risks to be mitigated: performance, availability of a product, and suitability of a component.
* The completion of the coverage of the architecture.
* Other tactical objectives or constraints, such as demonstration to the user, and so on.

### Examples of Architecturally Significant Requirements:
* The system must record every modification to customer records for audit purposes.
* The system must respond within 5 seconds.
* The system must deploy on Microsoft Windows XP and Linux.
* The system must encrypt all network traffic.
* The ATM system must dispense cash on demand to validated account holders with sufficient cleared funds.

# Reference Points
http://epf.eclipse.org/wikis/epfpractices/